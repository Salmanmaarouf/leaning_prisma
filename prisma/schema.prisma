// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// the generator reads all the prisma style code and converts it into prisma cient js fromat
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  age            Int
  name           String
  email          String          @unique
  role           Role            @default(BASIC)
  writtenPosts   Post[]          @relation("WrittenPosts")
  favoritePosts  Post[]          @relation("FavouritePosts")
  UserPreference UserPreference?

  @@unique([age, name]) //error only works if there is the same the name and same age for a user
  @@index([email])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id             String    @id @default(uuid())
  title          String
  rating         Float
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  author         User      @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId       String
  favouritedBy   User?     @relation("FavouritePosts", fields: [favourtiedById], references: [id])
  favourtiedById String?
  Category       Category? @relation(fields: [categoryId], references: [id])
  categoryId     String?
}

model Category {
  id   String @id @default(uuid())
  name String @unique
  post Post[]
}

enum Role {
  BASIC
  EDITOR
  ADMIN
}
